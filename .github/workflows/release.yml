name: Release

on:
  push:
    tags:
      - 'v*'

permissions: # Set top-level default permissions
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Run tests
        run: go test -v ./...

      - name: Build
        run: |
          mkdir -p build
          GOOS=linux GOARCH=amd64 go build -o build/ssl-toolkit-linux-amd64 ./cmd/ssl-toolkit
          GOOS=windows GOARCH=amd64 go build -o build/ssl-toolkit-windows-amd64.exe ./cmd/ssl-toolkit
          GOOS=darwin GOARCH=amd64 go build -o build/ssl-toolkit-darwin-amd64 ./cmd/ssl-toolkit
          GOOS=darwin GOARCH=arm64 go build -o build/ssl-toolkit-darwin-arm64 ./cmd/ssl-toolkit

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/ssl-toolkit-linux-amd64
            build/ssl-toolkit-windows-amd64.exe
            build/ssl-toolkit-darwin-amd64
            build/ssl-toolkit-darwin-arm64
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Calculate checksums
        run: |
          cd build
          sha256sum ssl-toolkit-darwin-amd64 > ssl-toolkit-darwin-amd64.sha256
          sha256sum ssl-toolkit-darwin-arm64 > ssl-toolkit-darwin-arm64.sha256

      - name: Clone and setup homebrew-tap
        run: |
          git clone https://${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/${{ github.repository_owner }}/homebrew-tap.git || (
            mkdir homebrew-tap
            cd homebrew-tap
            git init
            git remote add origin https://${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/${{ github.repository_owner }}/homebrew-tap.git
            git checkout -b main
            echo "# Homebrew Tap" > README.md
            mkdir -p Formula
            git add README.md
            git config user.name "GitHub Action"
            git config user.email "action@github.com"
            git commit -m "Initial commit"
            git push -u origin main
          )

      - name: Update Homebrew formula
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          AMD64_SHA=$(cat build/ssl-toolkit-darwin-amd64.sha256 | cut -d' ' -f1)
          ARM64_SHA=$(cat build/ssl-toolkit-darwin-arm64.sha256 | cut -d' ' -f1)
          
          cd homebrew-tap
          mkdir -p Formula
          
          cat > Formula/ssl-toolkit.rb << EOF
          class SslToolkit < Formula
            desc "SSL certificate toolkit"
            homepage "https://github.com/${{ github.repository }}"
            version "${VERSION#v}"

            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/${VERSION}/ssl-toolkit-darwin-arm64"
                sha256 "${ARM64_SHA}"
              else
                url "https://github.com/${{ github.repository }}/releases/download/${VERSION}/ssl-toolkit-darwin-amd64"
                sha256 "${AMD64_SHA}"
              end
            end

            def install
              if Hardware::CPU.arm?
                bin.install "ssl-toolkit-darwin-arm64" => "ssl-toolkit"
              else
                bin.install "ssl-toolkit-darwin-amd64" => "ssl-toolkit"
              end
            end

            test do
              system "#{bin}/ssl-toolkit", "--version"
            end
          end
          EOF

          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add Formula/ssl-toolkit.rb
          git commit -m "Update ssl-toolkit to ${VERSION}"
          git push 